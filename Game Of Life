class Solution {
public:
    vector<vector<int>> dir = {{-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 1}, {1, -1}, {1,0}, {1,1}};

    void gameOfLife(vector<vector<int>>& board) {
        int n = board.size();
        int m = board[0].size();
        vector<vector<int>> new_board(n, vector<int>(m));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int count = 0;
                for (vector<int> d : dir) {
                    int p = i + d[0];
                    int q = j + d[1];

                    if (p >= 0 && p < n && q >= 0 && q < m && board[p][q] == 1) {
                        count++;
                    }
                }
                if (board[i][j] == 1) {
                    if (count == 2 || count == 3) {
                        new_board[i][j] = 1;
                    }
                } else {
                    if (count == 3) {
                        new_board[i][j] = 1;
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                board[i][j] = new_board[i][j];
            }
        }
    }
};
